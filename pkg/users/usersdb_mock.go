// Code generated by MockGen. DO NOT EDIT.
// Source: ../repo/repo_user.go

// Package users is a generated GoMock package.
package users

import (
	context "context"
	repo "reddit_backend/pkg/repo"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserDB is a mock of UserDB interface.
type MockUserDB struct {
	ctrl     *gomock.Controller
	recorder *MockUserDBMockRecorder
}

// MockUserDBMockRecorder is the mock recorder for MockUserDB.
type MockUserDBMockRecorder struct {
	mock *MockUserDB
}

// NewMockUserDB creates a new mock instance.
func NewMockUserDB(ctrl *gomock.Controller) *MockUserDB {
	mock := &MockUserDB{ctrl: ctrl}
	mock.recorder = &MockUserDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserDB) EXPECT() *MockUserDBMockRecorder {
	return m.recorder
}

// CheckPasswordUser mocks base method.
func (m *MockUserDB) CheckPasswordUser(ctx context.Context, username, password string) (*repo.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPasswordUser", ctx, username, password)
	ret0, _ := ret[0].(*repo.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckPasswordUser indicates an expected call of CheckPasswordUser.
func (mr *MockUserDBMockRecorder) CheckPasswordUser(ctx, username, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPasswordUser", reflect.TypeOf((*MockUserDB)(nil).CheckPasswordUser), ctx, username, password)
}

// CreateUser mocks base method.
func (m *MockUserDB) CreateUser(ctx context.Context, id, username, password string) (*repo.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, id, username, password)
	ret0, _ := ret[0].(*repo.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUserDBMockRecorder) CreateUser(ctx, id, username, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserDB)(nil).CreateUser), ctx, id, username, password)
}
